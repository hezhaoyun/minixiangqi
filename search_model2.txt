==================== 开始搜索 ====================
进入节点 N00, depth=0, alpha=-inf, beta=inf
初始化 best_value = -inf, best_move = None
- 探索子节点: N10
  进入节点 N10, depth=1, alpha=-inf, beta=inf
  初始化 best_value = -inf, best_move = None
  - 探索子节点: N20
    进入节点 N20, depth=2, alpha=-inf, beta=inf
    初始化 best_value = -inf, best_move = None
    - 探索子节点: N30
      进入节点 N30, depth=3, alpha=-inf, beta=inf
      初始化 best_value = -inf, best_move = None
      - 探索子节点: N40
        进入节点 N40, depth=4, alpha=-inf, beta=inf
        -> 叶子节点 N40, 原始分=60, 调整后得分=60
        子节点 N40 的返回分(对手角度)=60, 取反后(我方角度)=-60
        更新! -60 > -inf. 新 best_value=-60, best_move=N40
        更新 alpha: max(-inf, -60) -> -60
      - 探索子节点: N41
        进入节点 N41, depth=4, alpha=-inf, beta=60
        -> 叶子节点 N41, 原始分=63, 调整后得分=63
        子节点 N41 的返回分(对手角度)=63, 取反后(我方角度)=-63
        不更新. -63 <= -60
      节点 N30 返回 best_value=-60, best_move=N40
      子节点 N30 的返回分(对手角度)=-60, 取反后(我方角度)=60
      更新! 60 > -inf. 新 best_value=60, best_move=N30
      更新 alpha: max(-inf, 60) -> 60
    - 探索子节点: N31
      进入节点 N31, depth=3, alpha=-inf, beta=-60
      初始化 best_value = -inf, best_move = None
      - 探索子节点: N42
        进入节点 N42, depth=4, alpha=60, beta=inf
        -> 叶子节点 N42, 原始分=15, 调整后得分=15
        子节点 N42 的返回分(对手角度)=15, 取反后(我方角度)=-15
        更新! -15 > -inf. 新 best_value=-15, best_move=N42
        更新 alpha: max(-inf, -15) -> -15
        !!剪枝!! alpha (-15) >= beta (-60). 停止探索 N31 的其他子节点.
      节点 N31 返回 best_value=-15, best_move=N42
      子节点 N31 的返回分(对手角度)=-15, 取反后(我方角度)=15
      不更新. 15 <= 60
    节点 N20 返回 best_value=60, best_move=N30
    子节点 N20 的返回分(对手角度)=60, 取反后(我方角度)=-60
    更新! -60 > -inf. 新 best_value=-60, best_move=N20
    更新 alpha: max(-inf, -60) -> -60
  - 探索子节点: N21
    进入节点 N21, depth=2, alpha=-inf, beta=60
    初始化 best_value = -inf, best_move = None
    - 探索子节点: N32
      进入节点 N32, depth=3, alpha=-60, beta=inf
      初始化 best_value = -inf, best_move = None
      - 探索子节点: N44
        进入节点 N44, depth=4, alpha=-inf, beta=60
        -> 叶子节点 N44, 原始分=81, 调整后得分=81
        子节点 N44 的返回分(对手角度)=81, 取反后(我方角度)=-81
        更新! -81 > -inf. 新 best_value=-81, best_move=N44
      - 探索子节点: N45
        进入节点 N45, depth=4, alpha=-inf, beta=60
        -> 叶子节点 N45, 原始分=74, 调整后得分=74
        子节点 N45 的返回分(对手角度)=74, 取反后(我方角度)=-74
        更新! -74 > -81. 新 best_value=-74, best_move=N45
      节点 N32 返回 best_value=-74, best_move=N45
      子节点 N32 的返回分(对手角度)=-74, 取反后(我方角度)=74
      更新! 74 > -inf. 新 best_value=74, best_move=N32
      更新 alpha: max(-inf, 74) -> 74
      !!剪枝!! alpha (74) >= beta (60). 停止探索 N21 的其他子节点.
    节点 N21 返回 best_value=74, best_move=N32
    子节点 N21 的返回分(对手角度)=74, 取反后(我方角度)=-74
    不更新. -74 <= -60
  节点 N10 返回 best_value=-60, best_move=N20
  子节点 N10 的返回分(对手角度)=-60, 取反后(我方角度)=60
  更新! 60 > -inf. 新 best_value=60, best_move=N10
  更新 alpha: max(-inf, 60) -> 60
- 探索子节点: N11
  进入节点 N11, depth=1, alpha=-inf, beta=-60
  初始化 best_value = -inf, best_move = None
  - 探索子节点: N22
    进入节点 N22, depth=2, alpha=60, beta=inf
    初始化 best_value = -inf, best_move = None
    - 探索子节点: N34
      进入节点 N34, depth=3, alpha=-inf, beta=-60
      初始化 best_value = -inf, best_move = None
      - 探索子节点: N48
        进入节点 N48, depth=4, alpha=60, beta=inf
        -> 叶子节点 N48, 原始分=20, 调整后得分=20
        子节点 N48 的返回分(对手角度)=20, 取反后(我方角度)=-20
        更新! -20 > -inf. 新 best_value=-20, best_move=N48
        更新 alpha: max(-inf, -20) -> -20
        !!剪枝!! alpha (-20) >= beta (-60). 停止探索 N34 的其他子节点.
      节点 N34 返回 best_value=-20, best_move=N48
      子节点 N34 的返回分(对手角度)=-20, 取反后(我方角度)=20
      更新! 20 > -inf. 新 best_value=20, best_move=N34
    - 探索子节点: N35
      进入节点 N35, depth=3, alpha=-inf, beta=-60
      初始化 best_value = -inf, best_move = None
      - 探索子节点: N4A
        进入节点 N4A, depth=4, alpha=60, beta=inf
        -> 叶子节点 N4A, 原始分=9, 调整后得分=9
        子节点 N4A 的返回分(对手角度)=9, 取反后(我方角度)=-9
        更新! -9 > -inf. 新 best_value=-9, best_move=N4A
        更新 alpha: max(-inf, -9) -> -9
        !!剪枝!! alpha (-9) >= beta (-60). 停止探索 N35 的其他子节点.
      节点 N35 返回 best_value=-9, best_move=N4A
      子节点 N35 的返回分(对手角度)=-9, 取反后(我方角度)=9
      不更新. 9 <= 20
    节点 N22 返回 best_value=20, best_move=N34
    子节点 N22 的返回分(对手角度)=20, 取反后(我方角度)=-20
    更新! -20 > -inf. 新 best_value=-20, best_move=N22
    更新 alpha: max(-inf, -20) -> -20
    !!剪枝!! alpha (-20) >= beta (-60). 停止探索 N11 的其他子节点.
  节点 N11 返回 best_value=-20, best_move=N22
  子节点 N11 的返回分(对手角度)=-20, 取反后(我方角度)=20
  不更新. 20 <= 60
节点 N00 返回 best_value=60, best_move=N10
==================== 搜索结束 ====================

最终评估分数 (从我方角度): 60
最佳着法是: N10